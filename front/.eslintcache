[{"/home/cristian/Documentos/Ximdex/front/src/index.js":"1","/home/cristian/Documentos/Ximdex/front/src/App.js":"2","/home/cristian/Documentos/Ximdex/front/src/reportWebVitals.js":"3","/home/cristian/Documentos/Ximdex/front/src/components/AppBar.js":"4","/home/cristian/Documentos/Ximdex/front/src/components/Dialog.js":"5","/home/cristian/Documentos/Ximdex/front/src/store/index.js":"6"},{"size":593,"mtime":1609544729584,"results":"7","hashOfConfig":"8"},{"size":3195,"mtime":1609549870062,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609536015379,"results":"10","hashOfConfig":"8"},{"size":771,"mtime":1609549783909,"results":"11","hashOfConfig":"8"},{"size":2692,"mtime":1609549900474,"results":"12","hashOfConfig":"8"},{"size":340,"mtime":1609546366681,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1t4g9he",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/cristian/Documentos/Ximdex/front/src/index.js",[],["28","29"],"/home/cristian/Documentos/Ximdex/front/src/App.js",["30"],"import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport AppBar from './components/AppBar';\nimport Dialog from './components/Dialog';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor:'#f1f1f1'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n    color: 'blue'\n  },\n  fullWidth: {\n    padding: \"0 !important\"\n  },\n  mt: {\n    marginTop: 20\n  },\n  accordionText: {\n    color: 'black'\n  },\n  icons: {\n    color: 'blue'\n  }\n}));\n\nfunction App({texts, dispatch}) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);  \n  \n  const Accord = texts.map((tx, ix) =>\n    <Accordion key={ix}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon className={classes.icons} />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>{tx.title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Typography className={classes.accordionText}>\n          {tx.text}\n        </Typography>\n      </AccordionDetails>\n    </Accordion>\n  );\n  const getTexts = async () => {\n    try {\n      const _txts = await (await fetch('https://baconipsum.com/api/?type=meat-and-filler&paras=2')).json()\n      _txts.forEach((element) => {\n        var title = element.split(' ').slice(0,3).join(' ');\n        dispatch({ type: 'ADD_TEXT', payload: { title: title, text: element } })\n      });\n      setLoading(false);\n    } catch (err) {\n      alert('error fetching data')\n    }\n  };\n  \n  useEffect( () => {    \n     getTexts();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      \n      <Container maxWidth=\"xl\" disableGutters>\n        <AppBar />\n        <Grid container>\n          <Grid item xs={12} className={classes.mt}>\n            <Typography align=\"center\" variant=\"h6\" gutterBottom>\n              First two items are loaded by an API. More can be added using the button \"ADD TEXT\".\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid className={classes.mt} container>\n          <Grid item xs={3} />\n          <Grid item xs={6} align={loading ? \"center\": \"left\"}>\n            {\n              loading ? <CircularProgress /> : Accord\n            }\n            <Dialog />\n          </Grid>\n          <Grid item xs={3} />\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return { texts: state.texts }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","/home/cristian/Documentos/Ximdex/front/src/reportWebVitals.js",[],"/home/cristian/Documentos/Ximdex/front/src/components/AppBar.js",[],"/home/cristian/Documentos/Ximdex/front/src/components/Dialog.js",[],"/home/cristian/Documentos/Ximdex/front/src/store/index.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":75,"column":6,"nodeType":"37","endLine":75,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTexts'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [getTexts]",{"range":"44","text":"45"},[2208,2210],"[getTexts]"]